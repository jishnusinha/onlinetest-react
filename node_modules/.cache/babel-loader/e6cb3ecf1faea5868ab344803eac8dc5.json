{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react\\\\online-test\\\\src\\\\components\\\\Test\\\\TestSection.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport Input from \"../UI/Input\";\nimport Button from \"../UI/Button\";\nimport Classes from \"./Test.module.css\";\nimport quiz from \"./../../data/quiz.json\";\nimport RightPanel from \"./RightPanel\";\nimport BottomPanel from \"./BottomPanel\";\nimport LeftPanel from \"./LeftPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestSection = props => {\n  _s();\n\n  let currentquestionState = {\n    index: 0,\n    answerSelectedindex: null,\n    correctAnswer: null,\n    savedforlater: false,\n    marked: false\n  };\n  const [currentquestionindex, setcurrentquestionindex] = useState(0);\n  const [questionState, setquestionState] = useState(currentquestionState);\n\n  const nextQuestion = () => {\n    setcurrentquestionindex(currentquestionindex + 1);\n    let {\n      index\n    } = questionState;\n    setquestionState({ ...questionState,\n      index: index + 1\n    });\n  };\n\n  const selectQuestion = i => {\n    setcurrentquestionindex(i);\n    let {\n      index\n    } = questionState;\n    setquestionState({ ...questionState,\n      index: i - 1\n    });\n  };\n\n  const answerselect = ansIndex => {\n    let {\n      answerSelectedindex\n    } = questionState;\n    setquestionState({ ...questionState,\n      answerSelectedindex: ansIndex\n    });\n    console.log(questionState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        currentquestionindex: currentquestionindex,\n        quiz: quiz,\n        questionState: questionState,\n        answerselect: answerselect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Classes.rightpanel,\n        children: /*#__PURE__*/_jsxDEV(RightPanel, {\n          quiz: quiz,\n          currentindex: currentquestionindex,\n          selectQuestion: selectQuestion,\n          questionState: questionState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BottomPanel, {\n        nextQuestion: nextQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestSection, \"rRYDrDWqj0QRrEWFJ3p3seleVLE=\");\n\n_c = TestSection;\nexport default TestSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestSection\");","map":{"version":3,"sources":["C:/projects/react/online-test/src/components/Test/TestSection.js"],"names":["Fragment","useState","Input","Button","Classes","quiz","RightPanel","BottomPanel","LeftPanel","TestSection","props","currentquestionState","index","answerSelectedindex","correctAnswer","savedforlater","marked","currentquestionindex","setcurrentquestionindex","questionState","setquestionState","nextQuestion","selectQuestion","i","answerselect","ansIndex","console","log","wrapper","rightpanel"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,MAAIC,oBAAoB,GAAG;AACzBC,IAAAA,KAAK,EAAE,CADkB;AAEzBC,IAAAA,mBAAmB,EAAE,IAFI;AAGzBC,IAAAA,aAAa,EAAE,IAHU;AAIzBC,IAAAA,aAAa,EAAE,KAJU;AAKzBC,IAAAA,MAAM,EAAE;AALiB,GAA3B;AAOA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDjB,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAACU,oBAAD,CAAlD;;AACA,QAAMU,YAAY,GAAG,MAAM;AACzBH,IAAAA,uBAAuB,CAACD,oBAAoB,GAAG,CAAxB,CAAvB;AACA,QAAI;AAAEL,MAAAA;AAAF,QAAYO,aAAhB;AACAC,IAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBP,MAAAA,KAAK,EAAEA,KAAK,GAAG;AAAnC,KAAD,CAAhB;AACD,GAJD;;AAMA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAC5BL,IAAAA,uBAAuB,CAACK,CAAD,CAAvB;AACA,QAAI;AAAEX,MAAAA;AAAF,QAAYO,aAAhB;AACAC,IAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBP,MAAAA,KAAK,EAAEW,CAAC,GAAG;AAA/B,KAAD,CAAhB;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,QAAI;AAAEZ,MAAAA;AAAF,QAA0BM,aAA9B;AACAC,IAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBN,MAAAA,mBAAmB,EAAEY;AAAzC,KAAD,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AACD,GAJD;;AAMA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACwB,OAAxB;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,oBAAoB,EAAEX,oBAAjC;AAAuD,QAAA,IAAI,EAAEZ,IAA7D;AAAmE,QAAA,aAAa,EAAEc,aAAlF;AAAiG,QAAA,YAAY,EAAEK;AAA/G;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEpB,OAAO,CAACyB,UAAxB;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAExB,IAAlB;AAAwB,UAAA,YAAY,EAAEY,oBAAtC;AAA4D,UAAA,cAAc,EAAEK,cAA5E;AAA4F,UAAA,aAAa,EAAEH;AAA3G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,WAAD;AAAa,QAAA,YAAY,EAAEE;AAA3B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvCD;;GAAMZ,W;;KAAAA,W;AAyCN,eAAeA,WAAf","sourcesContent":["import { Fragment, useState } from \"react\";\r\nimport Input from \"../UI/Input\";\r\nimport Button from \"../UI/Button\";\r\nimport Classes from \"./Test.module.css\";\r\nimport quiz from \"./../../data/quiz.json\";\r\nimport RightPanel from \"./RightPanel\";\r\nimport BottomPanel from \"./BottomPanel\";\r\nimport LeftPanel from \"./LeftPanel\";\r\nconst TestSection = (props) => {\r\n  let currentquestionState = {\r\n    index: 0,\r\n    answerSelectedindex: null,\r\n    correctAnswer: null,\r\n    savedforlater: false,\r\n    marked: false,\r\n  };\r\n  const [currentquestionindex, setcurrentquestionindex] = useState(0);\r\n  const [questionState, setquestionState] = useState(currentquestionState);\r\n  const nextQuestion = () => {\r\n    setcurrentquestionindex(currentquestionindex + 1);\r\n    let { index } = questionState;\r\n    setquestionState({ ...questionState, index: index + 1 });\r\n  };\r\n\r\n  const selectQuestion = (i) => {\r\n    setcurrentquestionindex(i);\r\n    let { index } = questionState;\r\n    setquestionState({ ...questionState, index: i - 1 });\r\n  };\r\n\r\n  const answerselect = (ansIndex) => {\r\n    let { answerSelectedindex } = questionState;\r\n    setquestionState({ ...questionState, answerSelectedindex: ansIndex });\r\n    console.log(questionState);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={Classes.wrapper}>\r\n        <LeftPanel currentquestionindex={currentquestionindex} quiz={quiz} questionState={questionState} answerselect={answerselect} />\r\n        <div className={Classes.rightpanel}>\r\n          <RightPanel quiz={quiz} currentindex={currentquestionindex} selectQuestion={selectQuestion} questionState={questionState} />\r\n        </div>\r\n        <BottomPanel nextQuestion={nextQuestion} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TestSection;\r\n"]},"metadata":{},"sourceType":"module"}
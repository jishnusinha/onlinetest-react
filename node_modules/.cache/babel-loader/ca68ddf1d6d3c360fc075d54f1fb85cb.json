{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react\\\\test series\\\\onlinetest-react\\\\src\\\\components\\\\Test\\\\LeftPanel.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport Button from \"../UI/Button\";\nimport Classes from \"./Test.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeftPanel = props => {\n  _s();\n\n  const {\n    currentquestionindex,\n    answerselect,\n    questionState,\n    updatequestionState,\n    quizStatetracker\n  } = props;\n  const [selectedanswer, setselectedanswer] = useState(null);\n\n  const setanswer = i => {\n    answerselect(i);\n    setselectedanswer(i);\n  };\n\n  useEffect(() => {\n    setselectedanswer(questionState.answerSelectedindex);\n    quizStatetracker({ ...questionState,\n      attempted: true\n    });\n    updatequestionState({ ...questionState,\n      attempted: true\n    });\n  }, [currentquestionindex]);\n  const options = [\"A\", \"B\", \"C\", \"D\"];\n  const option = questionState.answer.map((x, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          padding: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [options[index], \" . \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: selectedanswer !== null && selectedanswer == index ? \"button4\" : \"button2\",\n        func: () => setanswer(index),\n        children: [x, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.leftpanel,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [questionState.question, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), option]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeftPanel, \"3ql8b3OtgDK83EyXSPcugZjNm/s=\");\n\n_c = LeftPanel;\nexport default LeftPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftPanel\");","map":{"version":3,"sources":["C:/projects/react/test series/onlinetest-react/src/components/Test/LeftPanel.js"],"names":["Fragment","useState","useEffect","Button","Classes","LeftPanel","props","currentquestionindex","answerselect","questionState","updatequestionState","quizStatetracker","selectedanswer","setselectedanswer","setanswer","i","answerSelectedindex","attempted","options","option","answer","map","x","index","display","marginTop","border","padding","leftpanel","question"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA,aAAtC;AAAqDC,IAAAA,mBAArD;AAA0EC,IAAAA;AAA1E,MAA+FL,KAArG;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMa,SAAS,GAAIC,CAAD,IAAO;AACvBP,IAAAA,YAAY,CAACO,CAAD,CAAZ;AACAF,IAAAA,iBAAiB,CAACE,CAAD,CAAjB;AACD,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,iBAAiB,CAACJ,aAAa,CAACO,mBAAf,CAAjB;AACAL,IAAAA,gBAAgB,CAAC,EAAE,GAAGF,aAAL;AAAoBQ,MAAAA,SAAS,EAAE;AAA/B,KAAD,CAAhB;AAEAP,IAAAA,mBAAmB,CAAC,EAAE,GAAGD,aAAL;AAAoBQ,MAAAA,SAAS,EAAE;AAA/B,KAAD,CAAnB;AACD,GALQ,EAKN,CAACV,oBAAD,CALM,CAAT;AAOA,QAAMW,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;AACA,QAAMC,MAAM,GAAGV,aAAa,CAACW,MAAd,CAAqBC,GAArB,CAAyB,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACpD,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,iBAAV;AAA6BC,UAAAA,OAAO,EAAE;AAAtC,SAAZ;AAAA,+BACE;AAAA,iCACE;AAAA,uBAAIT,OAAO,CAACK,KAAD,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEX,cAAc,KAAK,IAAnB,IAA2BA,cAAc,IAAIW,KAA7C,GAAqD,SAArD,GAAiE,SAApF;AAA+F,QAAA,IAAI,EAAE,MAAMT,SAAS,CAACS,KAAD,CAApH;AAAA,mBACGD,CADH,EACM,GADN;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdc,CAAf;AAeA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACwB,SAAxB;AAAA,8BACE;AAAA,mBAAKnB,aAAa,CAACoB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGV,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzCD;;GAAMd,S;;KAAAA,S;AA2CN,eAAeA,SAAf","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"../UI/Button\";\r\nimport Classes from \"./Test.module.css\";\r\nconst LeftPanel = (props) => {\r\n  const { currentquestionindex, answerselect, questionState, updatequestionState, quizStatetracker } = props;\r\n  const [selectedanswer, setselectedanswer] = useState(null);\r\n\r\n  const setanswer = (i) => {\r\n    answerselect(i);\r\n    setselectedanswer(i);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setselectedanswer(questionState.answerSelectedindex);\r\n    quizStatetracker({ ...questionState, attempted: true });\r\n\r\n    updatequestionState({ ...questionState, attempted: true });\r\n  }, [currentquestionindex]);\r\n\r\n  const options = [\"A\", \"B\", \"C\", \"D\"];\r\n  const option = questionState.answer.map((x, index) => {\r\n    return (\r\n      <div style={{ display: \"flex\", marginTop: \"10px\" }}>\r\n        <div style={{ border: \"1px solid black\", padding: \"5px\" }}>\r\n          <p>\r\n            <b>{options[index]} . </b>\r\n          </p>\r\n        </div>\r\n\r\n        <Button className={selectedanswer !== null && selectedanswer == index ? \"button4\" : \"button2\"} func={() => setanswer(index)}>\r\n          {x}{\" \"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <Fragment>\r\n      <div className={Classes.leftpanel}>\r\n        <h5>{questionState.question} </h5>\r\n\r\n        {option}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeftPanel;\r\n"]},"metadata":{},"sourceType":"module"}
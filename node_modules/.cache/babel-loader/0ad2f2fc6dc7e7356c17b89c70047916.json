{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react\\\\test series\\\\onlinetest-react\\\\src\\\\components\\\\Test\\\\LeftPanel.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport Input from \"../UI/Input\";\nimport Button from \"../UI/Button\";\nimport Classes from \"./Test.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeftPanel = props => {\n  _s();\n\n  let currentquestionState = {\n    index: 0,\n    answerSelectedindex: null,\n    correctAnswer: null,\n    savedforlater: false,\n    marked: false,\n    attempted: false\n  };\n  const {\n    currentquestionindex,\n    quiz,\n    answerselect,\n    updatequestionState,\n    questionState,\n    quizStatusarr\n  } = props;\n  const [selectedanswer, setselectedanswer] = useState(null);\n\n  const setanswer = i => {\n    answerselect(i);\n    setselectedanswer(i); //updatequestionState({ ...questionStateLeftpanel, answerSelectedindex : i});\n  };\n\n  useEffect(() => {\n    // setquestionState(questionState);\n    //setselectedanswer(null);\n    updatequestionState({ ...questionState,\n      attempted: true\n    });\n  }, [currentquestionindex]);\n  const options = [\"A\", \"B\", \"C\", \"D\"];\n  console.log(questionState);\n  const option = questionState.answer.map((x, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          padding: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [options[index], \" . \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: selectedanswer !== null && selectedanswer == index ? \"button4\" : \"button2\",\n        func: () => setanswer(index),\n        children: [x, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.leftpanel,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [quiz[0].question, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), option]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeftPanel, \"3ql8b3OtgDK83EyXSPcugZjNm/s=\");\n\n_c = LeftPanel;\nexport default LeftPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftPanel\");","map":{"version":3,"sources":["C:/projects/react/test series/onlinetest-react/src/components/Test/LeftPanel.js"],"names":["Fragment","useState","useEffect","Input","Button","Classes","LeftPanel","props","currentquestionState","index","answerSelectedindex","correctAnswer","savedforlater","marked","attempted","currentquestionindex","quiz","answerselect","updatequestionState","questionState","quizStatusarr","selectedanswer","setselectedanswer","setanswer","i","options","console","log","option","answer","map","x","display","marginTop","border","padding","leftpanel","question"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,MAAIC,oBAAoB,GAAG;AACzBC,IAAAA,KAAK,EAAE,CADkB;AAEzBC,IAAAA,mBAAmB,EAAE,IAFI;AAGzBC,IAAAA,aAAa,EAAE,IAHU;AAIzBC,IAAAA,aAAa,EAAE,KAJU;AAKzBC,IAAAA,MAAM,EAAE,KALiB;AAMzBC,IAAAA,SAAS,EAAE;AANc,GAA3B;AASA,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,YAA9B;AAA4CC,IAAAA,mBAA5C;AAAiEC,IAAAA,aAAjE;AAAgFC,IAAAA;AAAhF,MAAkGb,KAAxG;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,IAAD,CAApD;;AACA,QAAMsB,SAAS,GAAIC,CAAD,IAAO;AACvBP,IAAAA,YAAY,CAACO,CAAD,CAAZ;AACAF,IAAAA,iBAAiB,CAACE,CAAD,CAAjB,CAFuB,CAGvB;AACD,GAJD;;AAKAtB,EAAAA,SAAS,CAAC,MAAM;AACd;AAEA;AACAgB,IAAAA,mBAAmB,CAAC,EAAE,GAAGC,aAAL;AAAoBL,MAAAA,SAAS,EAAE;AAA/B,KAAD,CAAnB;AACD,GALQ,EAKN,CAACC,oBAAD,CALM,CAAT;AAOA,QAAMU,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AACA,QAAMS,MAAM,GAAGT,aAAa,CAACU,MAAd,CAAqBC,GAArB,CAAyB,CAACC,CAAD,EAAItB,KAAJ,KAAc;AACpD,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEuB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,iBAAV;AAA6BC,UAAAA,OAAO,EAAE;AAAtC,SAAZ;AAAA,+BACE;AAAA,iCACE;AAAA,uBAAIV,OAAO,CAAChB,KAAD,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEY,cAAc,KAAK,IAAnB,IAA2BA,cAAc,IAAIZ,KAA7C,GAAqD,SAArD,GAAiE,SAApF;AAA+F,QAAA,IAAI,EAAE,MAAMc,SAAS,CAACd,KAAD,CAApH;AAAA,mBACGsB,CADH,EACM,GADN;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdc,CAAf;AAeA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE1B,OAAO,CAAC+B,SAAxB;AAAA,8BACE;AAAA,mBAAKpB,IAAI,CAAC,CAAD,CAAJ,CAAQqB,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGT,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlDD;;GAAMtB,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Input from \"../UI/Input\";\r\nimport Button from \"../UI/Button\";\r\nimport Classes from \"./Test.module.css\";\r\nconst LeftPanel = (props) => {\r\n  let currentquestionState = {\r\n    index: 0,\r\n    answerSelectedindex: null,\r\n    correctAnswer: null,\r\n    savedforlater: false,\r\n    marked: false,\r\n    attempted: false,\r\n  };\r\n\r\n  const { currentquestionindex, quiz, answerselect, updatequestionState, questionState, quizStatusarr } = props;\r\n  const [selectedanswer, setselectedanswer] = useState(null);\r\n  const setanswer = (i) => {\r\n    answerselect(i);\r\n    setselectedanswer(i);\r\n    //updatequestionState({ ...questionStateLeftpanel, answerSelectedindex : i});\r\n  };\r\n  useEffect(() => {\r\n    // setquestionState(questionState);\r\n\r\n    //setselectedanswer(null);\r\n    updatequestionState({ ...questionState, attempted: true });\r\n  }, [currentquestionindex]);\r\n\r\n  const options = [\"A\", \"B\", \"C\", \"D\"];\r\n  console.log(questionState);\r\n  const option = questionState.answer.map((x, index) => {\r\n    return (\r\n      <div style={{ display: \"flex\", marginTop: \"10px\" }}>\r\n        <div style={{ border: \"1px solid black\", padding: \"5px\" }}>\r\n          <p>\r\n            <b>{options[index]} . </b>\r\n          </p>\r\n        </div>\r\n\r\n        <Button className={selectedanswer !== null && selectedanswer == index ? \"button4\" : \"button2\"} func={() => setanswer(index)}>\r\n          {x}{\" \"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <Fragment>\r\n      <div className={Classes.leftpanel}>\r\n        <h5>{quiz[0].question} </h5>\r\n\r\n        {option}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeftPanel;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react\\\\test series\\\\onlinetest-react\\\\src\\\\components\\\\Test\\\\TestSection.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport Classes from \"./Test.module.css\";\nimport quiz from \"./../../data/quiz.json\";\nimport RightPanel from \"./RightPanel\";\nimport BottomPanel from \"./BottomPanel\";\nimport LeftPanel from \"./LeftPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestSection = props => {\n  _s();\n\n  let currentquestionState = {\n    index: 0,\n    answerSelectedindex: null,\n    correctAnswer: null,\n    savedforlater: false,\n    marked: false,\n    attempted: false,\n    answer: []\n  };\n\n  const quizfunc = () => {\n    //alert(\"quiz dtstructure called\");\n    let quizArr = [];\n\n    for (let x of quiz) {\n      let singlequizdata = {\n        index: x.id,\n        question: x.question,\n        answerSelectedindex: null,\n        correctAnswer: x.correct_answer_index,\n        savedforlater: false,\n        marked: false,\n        attempted: false,\n        answer: x.answer\n      };\n      quizArr.push(singlequizdata);\n    }\n\n    return quizArr;\n  };\n\n  const [currentquestionindex, setcurrentquestionindex] = useState(1);\n  const [questionState, setquestionState] = useState(currentquestionState);\n  const [quizstate, setQuizstate] = useState(quizfunc);\n  useEffect(() => {\n    setQuizstate(quizfunc);\n  }, []);\n\n  const nextQuestion = () => {\n    quizStatetracker(questionState);\n    setcurrentquestionindex(currentquestionindex + 1);\n  };\n\n  const mark_and_nextQuestion = () => {\n    let qState = questionState;\n    qState.marked = true;\n    quizStatetracker(qState);\n    setcurrentquestionindex(currentquestionindex + 1);\n  };\n\n  const clearresp = () => {\n    let qState = { ...questionState,\n      answerSelectedindex: null\n    };\n    setquestionState(qState);\n    quizStatetracker(qState);\n    setcurrentquestionindex(currentquestionindex + 1);\n  };\n\n  const selectQuestion = i => {\n    setcurrentquestionindex(i);\n  };\n\n  const answerselect = ansIndex => {\n    let qState = questionState;\n    qState.answerSelectedindex = ansIndex;\n    setquestionState(qState);\n  };\n\n  const updatequestionState = value => {\n    setquestionState(value);\n  };\n\n  const quizStatetracker = quizobj => {\n    let {\n      index\n    } = quizobj;\n    let quizStatusarr = quizstate;\n    quizStatusarr[index - 1] = quizobj;\n    setQuizstate(quizStatusarr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        currentquestionindex: currentquestionindex,\n        questionState: quizstate[currentquestionindex - 1],\n        updatequestionState: updatequestionState,\n        answerselect: answerselect,\n        quizStatetracker: quizStatetracker,\n        answerSelectedindex: questionState.answerSelectedindex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Classes.rightpanel,\n        children: /*#__PURE__*/_jsxDEV(RightPanel, {\n          currentindex: currentquestionindex,\n          selectQuestion: selectQuestion,\n          quizstate: quizstate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BottomPanel, {\n        nextQuestion: nextQuestion,\n        questionState: quizstate[currentquestionindex - 1],\n        mark_and_nextQuestion: mark_and_nextQuestion,\n        clearresp: clearresp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestSection, \"xM9WRZ+Y+o7QR1M4By0jM6pVMYU=\");\n\n_c = TestSection;\nexport default TestSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestSection\");","map":{"version":3,"sources":["C:/projects/react/test series/onlinetest-react/src/components/Test/TestSection.js"],"names":["Fragment","useState","useEffect","Classes","quiz","RightPanel","BottomPanel","LeftPanel","TestSection","props","currentquestionState","index","answerSelectedindex","correctAnswer","savedforlater","marked","attempted","answer","quizfunc","quizArr","x","singlequizdata","id","question","correct_answer_index","push","currentquestionindex","setcurrentquestionindex","questionState","setquestionState","quizstate","setQuizstate","nextQuestion","quizStatetracker","mark_and_nextQuestion","qState","clearresp","selectQuestion","i","answerselect","ansIndex","updatequestionState","value","quizobj","quizStatusarr","wrapper","rightpanel"],"mappings":"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","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport Classes from \"./Test.module.css\";\r\nimport quiz from \"./../../data/quiz.json\";\r\nimport RightPanel from \"./RightPanel\";\r\nimport BottomPanel from \"./BottomPanel\";\r\nimport LeftPanel from \"./LeftPanel\";\r\n\r\nconst TestSection = (props) => {\r\n  let currentquestionState = {\r\n    index: 0,\r\n    answerSelectedindex: null,\r\n    correctAnswer: null,\r\n    savedforlater: false,\r\n    marked: false,\r\n    attempted: false,\r\n    answer: [],\r\n  };\r\n  const quizfunc = () => {\r\n    //alert(\"quiz dtstructure called\");\r\n    let quizArr = [];\r\n    for (let x of quiz) {\r\n      let singlequizdata = {\r\n        index: x.id,\r\n        question: x.question,\r\n        answerSelectedindex: null,\r\n        correctAnswer: x.correct_answer_index,\r\n        savedforlater: false,\r\n        marked: false,\r\n        attempted: false,\r\n        answer: x.answer,\r\n      };\r\n      quizArr.push(singlequizdata);\r\n    }\r\n\r\n    return quizArr;\r\n  };\r\n  const [currentquestionindex, setcurrentquestionindex] = useState(1);\r\n  const [questionState, setquestionState] = useState(currentquestionState);\r\n  const [quizstate, setQuizstate] = useState(quizfunc);\r\n\r\n  useEffect(() => {\r\n    setQuizstate(quizfunc);\r\n  }, []);\r\n\r\n  const nextQuestion = () => {\r\n    quizStatetracker(questionState);\r\n    setcurrentquestionindex(currentquestionindex + 1);\r\n  };\r\n\r\n  const mark_and_nextQuestion = () => {\r\n    let qState = questionState;\r\n    qState.marked = true;\r\n    quizStatetracker(qState);\r\n    setcurrentquestionindex(currentquestionindex + 1);\r\n  };\r\n\r\n  const clearresp = () => {\r\n    let qState = { ...questionState, answerSelectedindex: null };\r\n    setquestionState(qState);\r\n    quizStatetracker(qState);\r\n    setcurrentquestionindex(currentquestionindex + 1);\r\n  };\r\n\r\n  const selectQuestion = (i) => {\r\n    setcurrentquestionindex(i);\r\n  };\r\n\r\n  const answerselect = (ansIndex) => {\r\n    let qState = questionState;\r\n    qState.answerSelectedindex = ansIndex;\r\n    setquestionState(qState);\r\n  };\r\n\r\n  const updatequestionState = (value) => {\r\n    setquestionState(value);\r\n  };\r\n\r\n  const quizStatetracker = (quizobj) => {\r\n    let { index } = quizobj;\r\n    let quizStatusarr = quizstate;\r\n    quizStatusarr[index - 1] = quizobj;\r\n    setQuizstate(quizStatusarr);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={Classes.wrapper}>\r\n        <LeftPanel currentquestionindex={currentquestionindex} questionState={quizstate[currentquestionindex - 1]} updatequestionState={updatequestionState} answerselect={answerselect} quizStatetracker={quizStatetracker} answerSelectedindex={questionState.answerSelectedindex} />\r\n        <div className={Classes.rightpanel}>\r\n          <RightPanel currentindex={currentquestionindex} selectQuestion={selectQuestion} quizstate={quizstate} />\r\n        </div>\r\n        <BottomPanel nextQuestion={nextQuestion} questionState={quizstate[currentquestionindex - 1]} mark_and_nextQuestion={mark_and_nextQuestion} clearresp={clearresp} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TestSection;\r\n"]},"metadata":{},"sourceType":"module"}